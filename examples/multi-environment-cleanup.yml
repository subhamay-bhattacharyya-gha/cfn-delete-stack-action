# Multi-Environment Stack Cleanup
# This workflow demonstrates cleaning up stacks across multiple environments and regions

name: Multi-Environment Cleanup

on:
  schedule:
    # Run every Sunday at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to clean up (or "all" for all environments)'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - development
          - staging
          - testing

env:
  # Define stack patterns for different environments
  DEV_STACKS: 'dev-app-stack,dev-database-stack,dev-cache-stack'
  STAGING_STACKS: 'staging-app-stack,staging-database-stack'
  TEST_STACKS: 'test-app-stack,test-integration-stack'

jobs:
  cleanup-development:
    name: Cleanup Development Environment
    runs-on: ubuntu-latest
    if: github.event.inputs.environment == 'development' || github.event.inputs.environment == 'all' || github.event_name == 'schedule'
    strategy:
      matrix:
        region: [us-east-1, us-west-2]
        stack: [dev-app-stack, dev-database-stack, dev-cache-stack]
      fail-fast: false
    
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ matrix.region }}

      - name: Delete Development Stack
        id: delete-stack
        uses: subhamay-bhattacharyya-gha/cfn-delete-stack-action@main
        with:
          stack-name: ${{ matrix.stack }}
          aws-region: ${{ matrix.region }}
          wait-for-completion: 'true'
        continue-on-error: true

      - name: Log Cleanup Result
        run: |
          echo "Environment: Development"
          echo "Region: ${{ matrix.region }}"
          echo "Stack: ${{ matrix.stack }}"
          echo "Result: ${{ steps.delete-stack.outputs.operation-result }}"
          echo "Status: ${{ steps.delete-stack.outputs.stack-status }}"
          echo "Time: ${{ steps.delete-stack.outputs.deletion-time }}"

  cleanup-staging:
    name: Cleanup Staging Environment
    runs-on: ubuntu-latest
    if: github.event.inputs.environment == 'staging' || github.event.inputs.environment == 'all' || github.event_name == 'schedule'
    strategy:
      matrix:
        region: [us-east-1]
        stack: [staging-app-stack, staging-database-stack]
      fail-fast: false
    
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ matrix.region }}

      - name: Delete Staging Stack
        id: delete-stack
        uses: subhamay-bhattacharyya-gha/cfn-delete-stack-action@main
        with:
          stack-name: ${{ matrix.stack }}
          aws-region: ${{ matrix.region }}
          wait-for-completion: 'true'
        continue-on-error: true

      - name: Log Cleanup Result
        run: |
          echo "Environment: Staging"
          echo "Region: ${{ matrix.region }}"
          echo "Stack: ${{ matrix.stack }}"
          echo "Result: ${{ steps.delete-stack.outputs.operation-result }}"

  cleanup-testing:
    name: Cleanup Testing Environment
    runs-on: ubuntu-latest
    if: github.event.inputs.environment == 'testing' || github.event.inputs.environment == 'all' || github.event_name == 'schedule'
    strategy:
      matrix:
        region: [us-east-1, eu-west-1]
        stack: [test-app-stack, test-integration-stack]
      fail-fast: false
    
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ matrix.region }}

      - name: Delete Testing Stack
        id: delete-stack
        uses: subhamay-bhattacharyya-gha/cfn-delete-stack-action@main
        with:
          stack-name: ${{ matrix.stack }}
          aws-region: ${{ matrix.region }}
          wait-for-completion: 'true'
        continue-on-error: true

      - name: Log Cleanup Result
        run: |
          echo "Environment: Testing"
          echo "Region: ${{ matrix.region }}"
          echo "Stack: ${{ matrix.stack }}"
          echo "Result: ${{ steps.delete-stack.outputs.operation-result }}"

  summary:
    name: Cleanup Summary
    runs-on: ubuntu-latest
    needs: [cleanup-development, cleanup-staging, cleanup-testing]
    if: always()
    
    steps:
      - name: Generate Summary
        run: |
          echo "## Multi-Environment Cleanup Summary" >> $GITHUB_STEP_SUMMARY
          echo "Cleanup completed for the following environments:" >> $GITHUB_STEP_SUMMARY
          echo "- Development: ${{ needs.cleanup-development.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Staging: ${{ needs.cleanup-staging.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Testing: ${{ needs.cleanup-testing.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check individual job logs for detailed results." >> $GITHUB_STEP_SUMMARY